.btn {
  --ripple-color: rgba(0, 0, 0, 0.3);
  --ripple-duration: 1.5s;
  --ripple-fuzz: 1px;
  border-color: transparent !important;
  /* Just the ripple goes to the edges */
}
/* ripple effect using only background-image, background-size, and background-position, which are all animateable properties. This allows the effect to work directly on elements without any wrappers or pseudo-elements, and without js needing to kick off the animation. */
.btn:focus:not(:disabled):not(.disabled),
.btn:active:not(:disabled):not(.disabled),
.btn.click-fx:not(:disabled):not(.disabled) {
  /* ripple outward radial-gradient that starts at size 0% expand to cover whole button. */
  background-image: radial-gradient(
      /*  gradient drawn as circle that touches the nearest side and stays in center    */
        circle closest-side at center,
      var(--ripple-color) 0%,
      /* need box large enough for the circle to encompass button. buttons are wider than tall, and never wider than 100vw, so ripple background grows to be sqrt(2) * 100% = 141% wide and 100vw tall, the circle should cover the entire button.   */
        var(--ripple-color) calc(100% - var(--ripple-fuzz, 0px)),
      transparent 100%
    ),
    /*  the fade afterwards is tricky because you can't change background images opacity. So simulate that by taking linear-gradient that starts with the ripple color and fades to transparent, and then move that over the button from the opaque end to the transparent end  */
      linear-gradient(180deg, var(--ripple-color) 10%, transparent 90%);
  /* now combine ripple and fade, into one animation. Can add multiple background-images and set their properties individually. Add both images and hide one by making its background size zero. Then in the middle  "switch" the images seamlessly by changing  background sizes over tiny time period  keyframe 0.001% after the previous one).   */
  background-size: 0% 0%, 0% 0%;
  background-repeat: no-repeat;
  background-origin: border-box;
  -webkit-animation: button-ripple var(--ripple-duration) ease-in;
  animation: button-ripple var(--ripple-duration) ease-in;
}
.btn.pre-click-fx {
  -webkit-animation: none !important;
  animation: none !important;
}
/* CSS Variable being used 
--click-offset-x: the distance of the click in px from the left edge of button.
--click-offset-y: the distance of the click in px from the top edge of button.
--click-max-r: the maximum distance from the click to any corner of the button,ensures ripple becomes large enough to cover button.
--click-el-w: the width of the element (necessary to position center of background-image relative to edges of the button -- starting from 0% and adding the offset would align the left edge of the background and not the center).
--click-el-h: the height of the element (same reason as above).
*/
@-webkit-keyframes button-ripple {
  0% {
    background-size: 0% 0%, 0% 0%;
    background-position: calc(
          50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)
        )
        calc(50% - var(--click-el-h, 0px) / 2 + var(--click-offset-y, 0px)),
      0% 0%;
  }
  33% {
    background-size: calc(2 * var(--click-max-r, 71%))
        calc(2 * var(--click-max-r, 200vw)),
      0% 0%;
    background-size: calc(2 * var(--click-max-r, 71%)) 100vmax, 0% 0%;
    background-position: calc(
          50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)
        )
        calc(50% - var(--click-el-h, 0px) / 2 + var(--click-offset-y, 0px)),
      0% 0%;
  }
  33.1% {
    background-size: 0% 0%, 100% 1000%;
  }
  100% {
    background-size: 0% 0%, 100% 1000%;
    background-position: 0% 0%, 0% 100%;
  }
}
@keyframes button-ripple {
  0% {
    background-size: 0% 0%, 0% 0%;
    background-position: calc(
          50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)
        )
        calc(50% - var(--click-el-h, 0px) / 2 + var(--click-offset-y, 0px)),
      0% 0%;
  }
  33% {
    background-size: calc(2 * var(--click-max-r, 71%))
        calc(2 * var(--click-max-r, 200vw)),
      0% 0%;
    background-size: calc(2 * var(--click-max-r, 71%)) 100vmax, 0% 0%;
    background-position: calc(
          50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)
        )
        calc(50% - var(--click-el-h, 0px) / 2 + var(--click-offset-y, 0px)),
      0% 0%;
  }
  33.1% {
    background-size: 0% 0%, 100% 1000%;
  }
  100% {
    background-size: 0% 0%, 100% 1000%;
    background-position: 0% 0%, 0% 100%;
  }
}
.dark-ripple {
  --ripple-color: rgba(0, 0, 0, 0.6);
}
.light-ripple {
  --ripple-color: rgba(255, 255, 255, 0.3);
}
.red-ripple {
  --ripple-color: rgba(255, 0, 0, 0.3);
}
.fuzzy-ripple {
  --ripple-fuzz: 30px;
}
.fast-ripple {
  --ripple-duration: 1s;
}
.slow-ripple {
  --ripple-duration: 3s;
}
.form-control {
  border-radius: 0;
  border: none;
  background-color: rgba(0, 0, 0, 0.1);
  transition: background-size 0.5s, background-color 0.5s, border-color 0.25s,
    color 0.2s, box-shadow 0.25s;
}
.form-control,
.form-control:hover,
.form-control:focus,
.form-control:active {
  background-image: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.35) 0%,
      rgba(0, 0, 0, 0.35) 100%
    ),
    linear-gradient(0deg, #007bff 0%, #007bff 100%);
  background-repeat: no-repeat;
  background-position: 50% 100%, 50% 100%;
  background-size: 100% 2px, 0% 2px;
}
.form-control:focus,
.form-control:active,
.form-control.click-fx {
  background-size: 100% 2px, 100% 2px;
  -webkit-animation: input-ripple 0.5s ease-in;
  animation: input-ripple 0.5s ease-in;
}
.form-control.pre-click-fx:not(.post-click-fx) {
  -webkit-animation: none !important;
  animation: none !important;
}
@-webkit-keyframes input-ripple {
  0% {
    background-position: 50% 100%,
      calc(50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)) 100%;
    background-size: 100% 2px, 0% 2px, 0% 0%;
  }
  100% {
    background-position: 50% 100%,
      calc(50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)) 100%;
    background-size: 100% 2px, calc(2 * var(--click-max-r, 71%)) 2px;
  }
}
@keyframes input-ripple {
  0% {
    background-position: 50% 100%,
      calc(50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)) 100%;
    background-size: 100% 2px, 0% 2px, 0% 0%;
  }
  100% {
    background-position: 50% 100%,
      calc(50% - var(--click-el-w, 0px) / 2 + var(--click-offset-x, 0px)) 100%;
    background-size: 100% 2px, calc(2 * var(--click-max-r, 71%)) 2px;
  }
}
